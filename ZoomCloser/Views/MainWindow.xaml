<!--
MIT License
Copyright (c) 2021 34j and contributors
https://opensource.org/licenses/MIT
-->
<metro:MetroWindow x:Name="ThisWindow"
                   x:Class="ZoomCloser.Views.MainWindow"
                   xmlns:l="clr-namespace:Gu.Wpf.Localization;assembly=Gu.Wpf.Localization"
                   xmlns:p="clr-namespace:ZoomCloser.Properties"
                   xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:local="clr-namespace:ZoomCloser.ViewModels"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:tb="http://www.hardcodet.net/taskbar"
                   xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                   xmlns:views="clr-namespace:ZoomCloser.Views"
                   xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                   d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel}"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   mc:Ignorable="d"
                   Title="{Binding Title}"
                   ShowInTaskbar="false"
                   WindowStyle="None"
                   Height="0"
                   Width="0"
                   Visibility="Hidden">
    <Window.Style>
        <Style TargetType="metro:MetroWindow">
            <Setter Property="Visibility"
                    Value="Hidden" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsVisible}"
                             Value="True">
                    <Setter Property="Visibility"
                            Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="Border"
                   x:Key="background">
                <Setter Property="Background"
                        Value="{DynamicResource BackgroundBrushKey}" />
            </Style>
            <Style TargetType="TextBlock"
                   x:Key="text">
                <Setter Property="Foreground"
                        Value="{DynamicResource ForegroundBrushKey}" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <tb:TaskbarIcon IconSource="icon_n.ico"
                        NoLeftClickDelay="True"
                        LeftClickCommand="{Binding ChangeVisiblityCommand}"
                        PopupActivation="LeftClick"
                        MenuActivation="RightClick">
            <tb:TaskbarIcon.Resources></tb:TaskbarIcon.Resources>
            <tb:TaskbarIcon.TrayPopup>
                <StackPanel>
                    <Border Height="400"
                            Width="250"
                            Style="{StaticResource background}">
                        <Grid>
                            <StackPanel Margin="10,15,10,10">
                                <TextBlock TextWrapping="Wrap"
                                           Text="{Binding NumberDisplayText}"
                                           VerticalAlignment="Top"
                                           MinHeight="60"
                                           Style="{StaticResource text}" />
                                <Button Content="{l:Static p:Resources.ExitMeeting}"
                                        HorizontalAlignment="Left"
                                        Command="{Binding ExitMeetingCommand}"
                                        Height="20"
                                        VerticalAlignment="Top" />
                                <Controls:ToggleSwitch Command="{Binding ActivateCommand}"
                                                       IsOn="{Binding IsActivated}"
                                                       Header="{l:Static p:Resources.Activation}" />
                                <views:IconToggleSwitch Command="{Binding MuteCommand, Mode=OneWay}"
                                                        IsOn="{Binding IsMuted}"
                                                        OnKind="RegularVolumeMute"
                                                        OffKind="RegularVolumeFull"
                                                        Header="{l:Static p:Resources.Mute}"
                                                        />
                                <views:IconToggleSwitch Command="{Binding RecordCommand, Mode=OneWay}"
                                                        IsOn="{Binding IsRecording}"
                                                        OnKind="RegularVideoRecording"
                                                        OffKind="RegularVideoOff"
                                                        Header="{l:Static p:Resources.Record}" />
                                <Button Command="{Binding OpenFolderCommand}"
                                        HorizontalAlignment="Left">
                                    <StackPanel Orientation="Horizontal">
                                        <iconPacks:PackIconBoxIcons Kind="RegularMoviePlay" />
                                        <Label Content="{l:Static p:Resources.OpenMovieFolder}" />
                                    </StackPanel>
                                </Button>
                                <Button Command="{Binding OpenSettingsCommand}"
                                        HorizontalAlignment="Left">
                                    <StackPanel Orientation="Horizontal">
                                        <iconPacks:PackIconBoxIcons Kind="RegularCog" />
                                        <Label Content="{l:Static p:Resources.Settings}" />
                                    </StackPanel>
                                </Button>
                                <ListBox ItemsSource="{Binding LogListBoxItemsSource}"
                                         Background="{x:Null}"
                                         Foreground="{DynamicResource ForegroundBrushKey}"
                                         Margin="0,0,0,10"
                                         Padding="0,0,0,10" />
                            </StackPanel>
                        </Grid>
                    </Border>
                </StackPanel>
            </tb:TaskbarIcon.TrayPopup>
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <l:LanguageSelector AutogenerateLanguages="True" />
                    <MenuItem Header="{l:Static p:Resources.Exit}"
                              Command="{Binding ApplicationExitCommand}" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
    </Grid>
</metro:MetroWindow>
