<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Exit" xml:space="preserve">
    <value>退出申请</value>
  </data>
  <data name="ParticipatedInMeeting" xml:space="preserve">
    <value>参加会议</value>
  </data>
  <data name="ExitMeeting" xml:space="preserve">
    <value>离开会议</value>
  </data>
  <data name="StartedCapturingTHeNumberOfParticipants" xml:space="preserve">
    <value>开始获取参加人数</value>
  </data>
  <data name="ThisSoftwareForcedToExitMeeting" xml:space="preserve">
    <value>这个软件离开会议</value>
  </data>
  <data name="UserForcedToExitMeeting" xml:space="preserve">
    <value>用户离开会议</value>
  </data>
  <data name="ZoomNotRunning" xml:space="preserve">
    <value>缩放未运行</value>
  </data>
  <data name="ParticipantCount" xml:space="preserve">
    <value>参与人数 当前值：{0} 人，记录最大值：{1} 人</value>
  </data>
  <data name="OpenParticipantsWindow" xml:space="preserve">
    <value>请调出参与者窗口。你可以关闭它。</value>
  </data>
  <data name="DifferentShortcuts" xml:space="preserve">
    <value>缩放快捷方式与预期（标准）不同，应更改以继续使用：管理参与者 (ALT + T)</value>
  </data>
  <data name="Bug" xml:space="preserve">
    <value>由于错误，无法获取参与者的数量。</value>
  </data>
  <data name="NormalExitCondition" xml:space="preserve">
    <value>参加人数少于 {0} 人时，我将离开。</value>
  </data>
  <data name="UnderOrEqualsToThresholdExitCondition" xml:space="preserve">
    <value>在记录的最大参与者人数超过 {0} 之前，它不会自动离开。</value>
  </data>
  <data name="Minimized" xml:space="preserve">
    <value>我无法获得参与者的数量，因为 Zoom 已最小化。</value>
  </data>
  <data name="Activation" xml:space="preserve">
    <value>自动离开</value>
  </data>
  <data name="Mute" xml:space="preserve">
    <value>将 Windows 侧的扬声器静音</value>
  </data>
  <data name="Record" xml:space="preserve">
    <value>记录</value>
  </data>
  <data name="OpenMovieFolder" xml:space="preserve">
    <value>打开视频文件夹</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>环境</value>
  </data>
</root>