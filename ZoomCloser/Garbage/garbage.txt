            // contentLeftPanelHWnd = FindWindowEx(parentWH, IntPtr.Zero, null, "ContentLeftPanel");
            // zPControlPanelClassHWnd = FindWindowEx(contentLeftPanelHWnd, IntPtr.Zero, "ZPControlPanelClass", null);
            // contentRightPanelHWnd = FindWindowEx(parentWH, IntPtr.Zero, null, "ContentRightPanel");

                            //inputSimulator.Keyboard.ModifiedKeyStroke(VirtualKeyCode.MENU, VirtualKeyCode.VK_U);
                //zPlistWndClassWH = FindWindowEx(zRightPanelContainerClassWH, IntPtr.Zero, null, null);



        /// <summary>
        /// 失敗
        /// </summary>
        /// <param name="keys"></param>
        /*public static void SendInputKeyPressAndRelease(byte[] keys)
        {
            int length = keys.Length;
            int arraySize = length * 2;
            INPUT[] inputs = new INPUT[arraySize];
            for (int i = 0; i < length; i++)
            {
                inputs[i].type = INPUTTYPE.INPUT_KEYBOARD;
                inputs[i].ki.wScan = keys[i];
            }
            for (int i = 0; i < length; i++)
            {
                var index = i + length;
                inputs[index].type = INPUTTYPE.INPUT_KEYBOARD;
                inputs[index].ki.wScan = keys[i];
                inputs[index].ki.dwFlags = KEYEVENTF.KEYEVENTF_KEYUP;
            }
            int size;
            unsafe
            {
                size = sizeof(INPUT);
            }
            SendInput((uint)arraySize, inputs, size);

        }*/
                //HWND contentLeftPanelHWnd;
        //HWND zPControlPanelClassHWnd;
        //HWND contentRightPanelHWnd;

        
            /* zoomが開いていない時→parentWH.isNull→諦め
             * zoomが最小化されている時→？諦め？
             * zoomが開いているが参加者ウィンドウが開いていない時→zPlistWndClassWH.IsNull(のみ)true→
             * 
             */
        private async Task<bool> GetWindowHandles()
        {
            for (int i = 0; i < 10; i++)
            {
                if (GetWindowHandles_()) {
                    OnEntered?.Invoke(this, new EventArgs());
                    return true;                
                }
                await Task.Delay(10);
                User32.SetFocus(parentWH);
            }
            return false;
        }


        <!--
MIT License
Copyright (c) 2021 34j and contributors
https://opensource.org/licenses/MIT
-->
<Window x:Class="ZoomCloser.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:local="clr-namespace:ZoomCloser.ViewModels" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:vm="clr-namespace:ZoomCloser.ViewModels"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Title="{Binding Title}" Height="226" Width="373" Background="Black" Foreground="White" BorderBrush="Black" OpacityMask="Black" Icon="icon.png">
    <Grid>

        <ContentControl prism:RegionManager.RegionName="ContentRegion"/>
        <TextBlock Margin="10,10,10,0" TextWrapping="Wrap" Text="{Binding NumberDisplayText}" VerticalAlignment="Top" Height="37"/>
        <Button Content="退出" HorizontalAlignment="Left" Width="75" Margin="10,52,0,0" Command="{Binding CloseCommand}" Height="20" VerticalAlignment="Top"/>
        <ListBox Margin="10,77,10,10" ItemsSource="{Binding LogListBoxItemsSource}" Background="Black" Foreground="White"/>
    </Grid>
</Window>

    /// <summary>
    /// Interaction logic for App.xaml
    /// </summary>
    public partial class App
    {
        protected override Window CreateShell()
        {
            return Container.Resolve<MainWindow>();
        }

        protected override void RegisterTypes(IContainerRegistry containerRegistry)
        {

        }
    }

    <prism:PrismApplication x:Class="ZoomCloser.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	         xmlns:prism="http://prismlibrary.com/"
             xmlns:local="clr-namespace:ZoomCloser">
    <Application.Resources>

    </Application.Resources>
</prism:PrismApplication>

    